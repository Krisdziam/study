{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';var clicksSlice=createSlice({name:'clicks',initialState:{value:0},reducers:{update:function update(state,action){state.value+=action.payload;}}});var persistConfig={key:'root',storage:storage};export var clicksReducer=persistReducer(persistConfig,clicksSlice.reducer);var update=clicksSlice.actions.update;export{update};export var getClicksSelector=function getClicksSelector(state){return state.clicks.value;};","map":{"version":3,"sources":["C:/IT/learnIT/study/src/redux/clicksSlice.js"],"names":["createSlice","persistReducer","storage","clicksSlice","name","initialState","value","reducers","update","state","action","payload","persistConfig","key","clicksReducer","reducer","actions","getClicksSelector","clicks"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,WAAW,CAAGH,WAAW,CAAC,CAC9BI,IAAI,CAAE,QADwB,CAE9BC,YAAY,CAAE,CAAEC,KAAK,CAAE,CAAT,CAFgB,CAG9BC,QAAQ,CAAE,CACRC,MAAM,CAAE,gBAACC,KAAD,CAAQC,MAAR,CAAmB,CACzBD,KAAK,CAACH,KAAN,EAAeI,MAAM,CAACC,OAAtB,CACD,CAHO,CAHoB,CAAD,CAA/B,CAUA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBX,OAAO,CAAPA,OAFoB,CAAtB,CAIA,MAAO,IAAMY,CAAAA,aAAa,CAAGb,cAAc,CAACW,aAAD,CAAgBT,WAAW,CAACY,OAA5B,CAApC,CAEA,GAAQP,CAAAA,MAAR,CAAmBL,WAAW,CAACa,OAA/B,CAAQR,MAAR,C,eAEP,MAAO,IAAMS,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAR,KAAK,QAAIA,CAAAA,KAAK,CAACS,MAAN,CAAaZ,KAAjB,EAA/B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst clicksSlice = createSlice({\r\n  name: 'clicks',\r\n  initialState: { value: 0 },\r\n  reducers: {\r\n    update: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\nexport const clicksReducer = persistReducer(persistConfig, clicksSlice.reducer);\r\n\r\nexport const { update } = clicksSlice.actions;\r\n\r\nexport const getClicksSelector = state => state.clicks.value;\r\n"]},"metadata":{},"sourceType":"module"}